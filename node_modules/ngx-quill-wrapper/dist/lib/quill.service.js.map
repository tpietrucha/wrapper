{"version":3,"file":"quill.service.js","sourceRoot":"","sources":["../../src/lib/quill.service.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C;IAIE;QAFQ,YAAO,GAAuB,IAAI,CAAC;IAE5B,CAAC;;;;;IAET,iCAAU;;;;IAAjB,UAAkB,aAAkB;;YAC9B,OAAO,GAAG,aAAa;QAE3B,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;YACrC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SACjD;QAED,IAAI,OAAO,WAAW,KAAK,WAAW,IAAI,OAAO,YAAY,WAAW,EAAE;YACxE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;aACxB;;gBAEK,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC;YAE1C,IAAI,OAAO,CAAC,UAAU,EAAE;gBACtB,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;aACjD;YAED,OAAO,KAAK,CAAC;SACd;QAED,OAAO,aAAa,CAAC;IACvB,CAAC;;gBA5BF,UAAU;;;;IA6BX,mBAAC;CAAA,AA7BD,IA6BC;SA5BY,YAAY;;;;;;IACvB,+BAA2C","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class QuillService {\n  private toolbar: HTMLElement | null = null;\n\n  constructor() {}\n\n  public getToolbar(toolbarConfig: any): any {\n    let toolbar = toolbarConfig;\n\n    if (typeof toolbarConfig === 'string') {\n      toolbar = document.querySelector(toolbarConfig);\n    }\n\n    if (typeof HTMLElement !== 'undefined' && toolbar instanceof HTMLElement) {\n      if (!this.toolbar) {\n        this.toolbar = toolbar;\n      }\n\n      const clone = this.toolbar.cloneNode(true);\n\n      if (toolbar.parentNode) {\n        toolbar.parentNode.replaceChild(clone, toolbar);\n      }\n\n      return clone;\n    }\n\n    return toolbarConfig;\n  }\n}\n"]}