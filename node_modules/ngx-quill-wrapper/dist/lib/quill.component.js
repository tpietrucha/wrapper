/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, HostBinding, ViewEncapsulation } from '@angular/core';
import { QuillDirective } from './quill.directive';
var QuillComponent = /** @class */ (function () {
    function QuillComponent() {
        this.content = null;
        this.disabled = false;
        this.autoToolbar = false;
        this.realToolbar = false;
        this.useQuillClass = true;
        this.blur = new EventEmitter();
        this.focus = new EventEmitter();
        this.valueChange = new EventEmitter();
        this.editorCreate = new EventEmitter();
        this.contentChange = new EventEmitter();
        this.selectionChange = new EventEmitter();
    }
    Object.defineProperty(QuillComponent.prototype, "value", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.setContent(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    QuillComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.content != null) {
            this.setContent(this.content, true);
        }
    };
    /**
     * @private
     * @param {?} value
     * @param {?=} force
     * @return {?}
     */
    QuillComponent.prototype.setContent = /**
     * @private
     * @param {?} value
     * @param {?=} force
     * @return {?}
     */
    function (value, force) {
        if (force || value !== this.content) {
            if (this.directiveRef) {
                this.directiveRef.setValue(value, 'silent');
            }
            this.content = value;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    QuillComponent.prototype.onContentChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.content = event.html;
        this.contentChange.emit(event);
        this.valueChange.emit(event.html);
    };
    QuillComponent.decorators = [
        { type: Component, args: [{
                    selector: 'quill',
                    exportAs: 'ngxQuill',
                    template: "<div [quill]=\"config\" [modules]=\"modules\" [disabled]=\"disabled\" [autoToolbar]=\"autoToolbar\" [realToolbar]=\"realToolbar\" (blur)=\"blur.emit($event)\" (focus)=\"focus.emit($event)\" (editorCreate)=\"editorCreate.emit($event)\" (contentChange)=\"onContentChange($event)\" (selectionChange)=\"selectionChange.emit($event)\">\n  <ng-content select=\"[quillToolbar]\"></ng-content>\n\n  <ng-content select=\"[quillContent]\"></ng-content>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: ["@import url('https://cdn.quilljs.com/1.3.5/quill.snow.css');\n@import url('https://cdn.quilljs.com/1.3.5/quill.bubble.css');\n\n.quill {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n.quill > .ql-toolbar > .ql-formats {\n  margin-right: 12px;\n  margin-left: 0;\n}\n\n.quill > .ql-toolbar + .ql-container {\n  height: calc(100% - 42px);\n}\n\n.quill[fxflex] {\n  display: flex;\n  flex-direction: inherit;\n  align-items: inherit;\n  min-width: 0;\n  min-height: 0;\n\n  -webkit-box-direction: inherit;\n  -webkit-box-orient: inherit;\n}\n\n.quill[fxflex] > .ql-toolbar {\n  flex: 0 0 auto;\n\n  -webkit-box-flex: 0;\n}\n\n.quill[fxflex] > .ql-container {\n  flex: 1 1 auto;\n  min-width: 0;\n  min-height: 0;\n\n  -webkit-box-flex: 1;\n}\n"]
                }] }
    ];
    /** @nocollapse */
    QuillComponent.ctorParameters = function () { return []; };
    QuillComponent.propDecorators = {
        value: [{ type: Input }],
        disabled: [{ type: Input }],
        autoToolbar: [{ type: Input }],
        realToolbar: [{ type: Input }],
        config: [{ type: Input }],
        modules: [{ type: Input }],
        useQuillClass: [{ type: HostBinding, args: ['class.quill',] }, { type: Input }],
        blur: [{ type: Output }],
        focus: [{ type: Output }],
        valueChange: [{ type: Output }],
        editorCreate: [{ type: Output }],
        contentChange: [{ type: Output }],
        selectionChange: [{ type: Output }],
        directiveRef: [{ type: ViewChild, args: [QuillDirective,] }]
    };
    return QuillComponent;
}());
export { QuillComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    QuillComponent.prototype.content;
    /** @type {?} */
    QuillComponent.prototype.disabled;
    /** @type {?} */
    QuillComponent.prototype.autoToolbar;
    /** @type {?} */
    QuillComponent.prototype.realToolbar;
    /** @type {?} */
    QuillComponent.prototype.config;
    /** @type {?} */
    QuillComponent.prototype.modules;
    /** @type {?} */
    QuillComponent.prototype.useQuillClass;
    /** @type {?} */
    QuillComponent.prototype.blur;
    /** @type {?} */
    QuillComponent.prototype.focus;
    /** @type {?} */
    QuillComponent.prototype.valueChange;
    /** @type {?} */
    QuillComponent.prototype.editorCreate;
    /** @type {?} */
    QuillComponent.prototype.contentChange;
    /** @type {?} */
    QuillComponent.prototype.selectionChange;
    /** @type {?} */
    QuillComponent.prototype.directiveRef;
}
//# sourceMappingURL=quill.component.js.map