{"version":3,"file":"quill.component.js","sourceRoot":"","sources":["../../src/lib/quill.component.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EACD,KAAK,EAAE,MAAM,EAAE,YAAY,EAC1C,SAAS,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAEnE,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAInD;IAsCE;QA9BQ,YAAO,GAAkB,IAAI,CAAC;QAO7B,aAAQ,GAAY,KAAK,CAAC;QAE1B,gBAAW,GAAY,KAAK,CAAC;QAC7B,gBAAW,GAAY,KAAK,CAAC;QAO7B,kBAAa,GAAY,IAAI,CAAC;QAE7B,SAAI,GAAG,IAAI,YAAY,EAAO,CAAC;QAC/B,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;QAEhC,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QAEzC,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;QACvC,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;QACxC,oBAAe,GAAG,IAAI,YAAY,EAAO,CAAC;IAIrC,CAAC;IA5BhB,sBACI,iCAAK;;;;;QADT,UACU,KAAa;YACrB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC;;;OAAA;;;;IA2BD,wCAAe;;;IAAf;QACE,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACrC;IACH,CAAC;;;;;;;IAEO,mCAAU;;;;;;IAAlB,UAAmB,KAAa,EAAE,KAAe;QAC/C,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,OAAO,EAAE;YACnC,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aAC7C;YAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACH,CAAC;;;;;IAEM,wCAAe;;;;IAAtB,UAAuB,KAAU;QAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC;QAE1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;;gBA9DF,SAAS,SAAC;oBACT,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,UAAU;oBACpB,gdAAkD;oBAElD,aAAa,EAAE,iBAAiB,CAAC,IAAI;;iBACtC;;;;;wBAIE,KAAK;2BAKL,KAAK;8BAEL,KAAK;8BACL,KAAK;yBAEL,KAAK;0BAEL,KAAK;gCAEL,WAAW,SAAC,aAAa,cACzB,KAAK;uBAEL,MAAM;wBACN,MAAM;8BAEN,MAAM;+BAEN,MAAM;gCACN,MAAM;kCACN,MAAM;+BAEN,SAAS,SAAC,cAAc;;IA2B3B,qBAAC;CAAA,AA/DD,IA+DC;SAxDY,cAAc;;;;;;IACzB,iCAAsC;;IAOtC,kCAAmC;;IAEnC,qCAAsC;;IACtC,qCAAsC;;IAEtC,gCAAuC;;IAEvC,iCAAyC;;IAEzC,uCACuC;;IAEvC,8BAAyC;;IACzC,+BAA0C;;IAE1C,qCAAmD;;IAEnD,sCAAiD;;IACjD,uCAAkD;;IAClD,yCAAoD;;IAEpD,sCAAyD","sourcesContent":["import { Component,\n  AfterViewInit, Input, Output, EventEmitter,\n  ViewChild, HostBinding, ViewEncapsulation } from '@angular/core';\n\nimport { QuillDirective } from './quill.directive';\n\nimport { QuillConfigInterface, QuillModulesInterface } from './quill.interfaces';\n\n@Component({\n  selector: 'quill',\n  exportAs: 'ngxQuill',\n  templateUrl: '../../dist/lib/quill.component.html',\n  styleUrls: [ '../../dist/lib/quill.component.css' ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class QuillComponent implements AfterViewInit {\n  private content: string | null = null;\n\n  @Input()\n  set value(value: string) {\n    this.setContent(value);\n  }\n\n  @Input() disabled: boolean = false;\n\n  @Input() autoToolbar: boolean = false;\n  @Input() realToolbar: boolean = false;\n\n  @Input() config?: QuillConfigInterface;\n\n  @Input() modules?: QuillModulesInterface;\n\n  @HostBinding('class.quill')\n  @Input() useQuillClass: boolean = true;\n\n  @Output() blur = new EventEmitter<any>();\n  @Output() focus = new EventEmitter<any>();\n\n  @Output() valueChange = new EventEmitter<string>();\n\n  @Output() editorCreate = new EventEmitter<any>();\n  @Output() contentChange = new EventEmitter<any>();\n  @Output() selectionChange = new EventEmitter<any>();\n\n  @ViewChild(QuillDirective) directiveRef?: QuillDirective;\n\n  constructor() {}\n\n  ngAfterViewInit(): void {\n    if (this.content != null) {\n      this.setContent(this.content, true);\n    }\n  }\n\n  private setContent(value: string, force?: boolean): void {\n    if (force || value !== this.content) {\n      if (this.directiveRef) {\n        this.directiveRef.setValue(value, 'silent');\n      }\n\n      this.content = value;\n    }\n  }\n\n  public onContentChange(event: any): void {\n    this.content = event.html;\n\n    this.contentChange.emit(event);\n\n    this.valueChange.emit(event.html);\n  }\n}\n"]}